@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-sm-12">

        <!--Inicio tarjeta-->
        <div class="card">
            <div class="card-header">Contactos</div>
            <div class="card-body">

                <button class="btn btn-success" id="btnNuevo">Nuevo Contacto</button>

                <hr />

                <table class="table table-striped" id="tbContacto" >
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Telefono</th>
                            <th>Fecha Nacimiento</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>

            </div>
        </div>
        <!--Fin tarjeta-->

    </div>
</div>



<!--Inicio Modal-->
<div class="modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Detalle Contacto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtIdContacto" value="0" />
                <div class="mb-2">
                    <label>Nombre</label>
                    <input type="text" class="form-control" id="txtNombre" />
                   
                </div>
                <div class="mb-2">
                    <label>Telefono</label>
                    <input type="text" class="form-control" id="txtTelefono" />
                </div>
                  <div class="mb-2">
                    <label>Email</label>
                    <input type="text" class="form-control" id="txtEmail" />
                </div>
                <div class="mb-2">
                    <label>Fecha Nacimiento</label>
                    <input type="text" class="form-control" id="txtFechaNacimiento" />
                    
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnGuardar">Guardar</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<!--Fin Modal-->

@section Scripts{

    <script>

                //creo un modelo con lo campos de la clase modelo de la bd
                const Modelo_Base = {
                    idContacto: 0,
                    nombre: "",
                    telefono: "",
                    correoElectronico: "",
                    fechaNacimiento: ""


                }

                //esto es lo que carga  siempre la pagina
                $(document).ready(() => {
                    listaContactos();
                })

                /* despues creo una funcion que recibe un modelo y le pasamos de acerudo al id de cada
                   caja de texto por que asi se identifican y luego muestro ese modelo con la clase .modal que fue la
                   que se puso en el div que contiene los campos 

                */

                function mostrarModal(modelo) {
                    $("#txtIdContacto").val(modelo.idContacto);
                    $("#txtNombre").val(modelo.nombre);
                    $("#txtTelefono").val(modelo.telefono);
                    $("#txtEmail").val(modelo.correoElectronico);
                    $("#txtFechaNacimiento").val(modelo.fechaNacimiento);

                    $(".modal").modal("show");
                }

                
                /* 
                  luego llamo con el identificador el btn guardar en la funcion click llamo la funcion mostrarModal
                  y paso el Modelo_Base que fue el que creamos con los campos que necesitamos igual a la de la base de datos
                */
                $("#btnNuevo").click(() => {
                    mostrarModal(Modelo_Base);
                })


                /*
                 el identificador btnGuardar es un boton que al cliquearlo hara correr una funcion la cual es rellenar con los valores que digitamos 
                 en el formulario con el div modal e ira al controlador con el fecth que seria el Insertar metodo post que sera enviado en JSON
                 y en el contralador al realizar la insercion resibios una respuesta que la convertiremos en JSON nuevamente y verificamos si es true
                 si es true entoces esa dataJson tirara una alerta que el estudiante se ha registrado y se esconde el div del formulario modal que es 
                 el que utilizamos para agregar el usaurio y nos devolvemos al formulario principal que es donde sale todos los registros.



                 2-tenemos una validacion si el IdContacto es igual a 0 quiere decir que el usuario es nuevo pero si es todo lo contrario
                 vamos a editar un usuario existente procedemos a lo siguiente:


                 -al cargar la aplicacion se cargar la funcion listaContactos la cual va al controlador por medio de fecth trae todos los datos
                 y los muestra por medio del div, el formulario tiene dos bototnes editar y eliminar con sus identificadores al darle al editar cargaremos una funcion la cual es mostrarcontactos
                 la cual le pasamos la data del modelo seleccionado y los cargaremos en el otro formulario que se abrirar y mostrara la informacion amplia del contacto que estamos pasando
                 al darle al boton Guardar cargaremos otra funcion que valida el identificador  si es igual a cero es nuevo y si es mayor es uno exitente entoces es actualizar va al controaldor por medio
                 del fecth actuliza los datos envia respuesta si es correcta envia un alertMessage que el usuario e ha sido acutualizado.

                 ahora para el eliminar al cargar el formulario de registro al darle el btnEliminar pasaremos el id del contacto selecionado
                 entoces hacamos una condicion donde al mostrar a alertMessage que si da ok osea true enviaremos por medio del fecth al contraldor idcontacto 
                 eliminamos y traemos respuesta si es true cargar todos los registro y listo.

                  
                */
                    

                 $("#btnGuardar").click(() => {
                             let NuevoModelo = Modelo_Base;

                    
                            NuevoModelo["idContacto"] = $("#txtIdContacto").val();
                            NuevoModelo["nombre"]  = $("#txtNombre").val();
                            NuevoModelo["telefono"]  = $("#txtTelefono").val();
                            NuevoModelo["correoElectronico"] = $("#txtEmail").val();
                            NuevoModelo["fechaNacimiento"]  = $("#txtFechaNacimiento").val();

                    

                            if($("#txtIdContacto").val() == "0"){
                                fetch("Home/Insertar",{
                                    method:"POST",
                                    headers: {
                                        'Content-Type': 'application/json;charset=utf-8'
                                    },
                                    body: JSON.stringify( NuevoModelo)
                                })
                                .then((response) => {
                                    return response.ok ? response.json() : Promise.reject(response)
                                })
                                .then((dataJson) => {
                
                                    if(dataJson.valor){
                                        alert("Estudiante Registrado");
                                          $('.modal').modal('hide');
                                
                                    }
                                })
                            }else{
                                fetch("Home/Actualizar", {

                                        method:"PUT",
                                        headers: {
                                            'Content-Type': 'application/json;charset=utf-8'
                                        },
                                        body: JSON.stringify( NuevoModelo)
                                        })
                                        .then((response) => {
                                            return response.ok ? response.json() : Promise.reject(response)
                                        })
                                        .then((dataJson) => {
                
                                            if(dataJson.valor){
                                                alert("Estudiante Editado!!");
                                                  $('.modal').modal('hide');
                                                 listaContactos();
                                            }

                                })
            
                            }
                   

                    

                })

              

                //formulario principal que cargamos siempre al inicar la aplicacion
                function listaContactos(){
                     fetch("Home/Listar")
                        .then((response) => {
                            return response.ok ? response.json() : Promise.reject(response)
                        })
                        .then((dataJson) => {

                            //console.log(dataJson);
                               $("#tbContacto tbody").html("");

                                dataJson.forEach((item) => {
                    
                                    $("#tbContacto tbody").append(
                                        $("<tr>").append(
                                            $("<td>").text(item.nombre),
                                            $("<td>").text(item.telefono),
                                            $("<td>").text(item.fechaNacimiento),
                                            $("<td>").append(
                                                $("<button>").addClass("btn btn-primary btn-sm me-2 btn-editar").data("modelo",item).text("Editar"),
                                                $("<button>").addClass("btn btn-danger btn-sm btn-eliminar").data("id",item.idContacto).text("Eliminar")
                                            )
                                        )
                                    )
                
                                })
                        })
                }


                //funcion del btnActualizar

                   $("#tbContacto tbody").on("click",".btn-editar",function(){
                        let contacto = $(this).data("modelo")
            
                        mostrarModal(contacto)
                     })





                     //funcion del btnEliminar
                       $("#tbContacto tbody").on("click",".btn-eliminar",function(){
                            let idcontacto = $(this).data("id")
            
                            let resultado = window.confirm("¿Desea eliminar el contacto?");


                            if(resultado){


                                  fetch("Home/Eliminar?id=" + idcontacto,{
                                        method:"DELETE"
                                    })
                                    .then((response) => {
                                        return response.ok ? response.json() : Promise.reject(response)
                                    })
                                    .then((dataJson) => {
                
                                        if(dataJson.valor){
                                             listaContactos();
                                        }
                                    })
               

                            }

            
                        })

                

    </script>





}

